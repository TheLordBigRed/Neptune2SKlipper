[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
# This file contains standard pin mappings for the stock Elegoo Neptune 2 with a
# ZNP Robin Nano (v 1.2 and v1.3) board.
# For the 1.2 board:
#   - Compile with the processor model STM32F103.
#   - Enable "extra low-level configuration options"
#   - Select the 28KiB bootloader,
#   - Select (Serial (on # USART3 PB11/PB10) for the communication interface.
# Note that the "make flash" command does not work with ZNP Robin boards. After
# running "make", run the following command:
# ./scripts/update_mks_robin.py out/klipper.bin out/elegoo.bin
#
# For the 1.3 board:
#   - Compile with the processor model STM32F407.
#   - Enable "extra low-level configuration options"
#   - Select the 32KiB bootloader,
#   - Select (Serial (on # USART3 PB11/PB10) for the communication interface.
# Note that the "make flash" command does not work with ZNP Robin boards. After
# running "make", run the following command:
# cp out/klipper.bin out/elegoo.bin
#
# Copy the file out/elegoo.bin to an SD card and then restart the printer with
# that SD card.
# See docs/Config_Reference.md for a description of parameters.

#[include timelapse.cfg]

#Include Macros.cfg
[include macros.cfg]

#Include spoolman.cfg
[include spoolman.cfg]

#Include stealthburner_leds.cfg
[include stealthburner_leds.cfg]

#Include ztilt.cfg
[include ztilt.cfg]

#Include config_backup.cfg
[include config_backup.cfg]

#Include orca.cfg
[include orca.cfg]

#Include mainsail.cfg
[include mainsail.cfg]

#Include Fysetc PIS.cfg
#[include PIS.cfg]

#Include mainsail.cfg
[include mainsail.cfg]

#Include Home Override
[include homingoverride.cfg]

#Include K-ShakeTune
[include K-ShakeTune/*.cfg]

[exclude_object]

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1900430011504B57353*****-if00
#serial: /dev/serial/by-id/*
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

#[mcu u2c]
#canbus_uuid: 565d79a49297

#[mus MMBv2]
#canbus_uuid: 2654291f7a61
# embedded temperature sensor
#[temperature_sensor U2C]
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

[mcu EBBCan]
canbus_uuid: 2654291f7a61

[temperature_sensor EBB_SB2209]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor CB1]
sensor_type: temperature_host

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
sensor_temperature1: 25
sensor_adc1: 0.210317

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 10000
max_z_velocity: 5
max_z_accel: 100							


[stepper_x]
step_pin: PE3
dir_pin: PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: EBBCan: PB6
position_endstop: 242
position_min: -19
position_max: 242
homing_speed: 50
homing_retract_dist: 10
homing_positive_dir: true

[stepper_y]
step_pin: PE0
dir_pin: PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PA12
position_endstop: -5
position_min: -5
position_max: 220
homing_speed: 50
homing_retract_dist: 10
#homing_positive_dir: true

[stepper_z]
step_pin: PB5
dir_pin: !PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree
endstop_pin: PA11
position_max: 250
position_min: -8
endstop_pin: probe:z_virtual_endstop
homing_speed: 25
homing_retract_dist: 5
# Distance to backoff (in mm) before homing a second time during
# homing. Set this to zero to disable the second home. The default
# is 5mm.
homing_retract_speed: 10
# Speed to use on the retract move after homing in case this should
# be different from the homing speed, which is the default for this
# parameter
second_homing_speed: 5
# Velocity (in mm/s) of the stepper when performing the second home.
# The default is homing_speed/2.

[stepper_z1]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 40
gear_ratio: 80:16
full_steps_per_rotation: 200 #200 for 1.8 degree, 400 for 0.9 degree

[bed_mesh]
speed: 120
horizontal_move_z: 10
mesh_min: 22, 10
mesh_max: 225, 210
probe_count: 5,5
adaptive_margin: 5

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
# rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
rotation_distance: 47.088	# calibrated
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 9:1				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13
##	Validate the following thermistor type to make sure it is correct
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
#pullup_resistor: 4700
# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2
#pullup_resistor: 1000
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
##	Try to keep pressure_advance below 1.0
# 0.0325
# 0.032
pressure_advance: 0.02
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 50
max_extrude_only_distance: 200

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: false
run_current: 0.6
#sense_resistor: 0.110
#stealthchop_threshold: 0

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

[fan_generic Controller]
pin: PB1

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[neopixel hotend_rgb]
#pin: EBBCan:PD3

[bltouch]
sensor_pin: ^EBBCan: PB8
control_pin: EBBCan: PB9
x_offset: 41
y_offset: 10
#z_offset: 0

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9

#[output_pin PB5]
#pin: EBBCan: PB5

#[output_pin PB7]
#pin: EBBCan: PB7

#[output_pin PB6]
#pin: EBBCan: PB6

[filament_switch_sensor filament_sensor]
pause_on_runout: True
switch_pin: PA4

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
# tuned for stock hardware with 60 degree Celsius target
control: pid
pid_Kp: 70.857
pid_Ki: 1.221
pid_Kd: 1028.316
min_temp: 0
max_temp: 110

#[heater_fan hotend_fan]
#pin: PB0
#heater: extruder
#heater_temp: 50.0

#[fan]
#pin: PB1

[bed_screws]
screw4: 32.5, 32.5
screw3: 32.5, 202.5
screw2: 202.5, 32.5
screw1: 202.5, 202.5

[screws_tilt_adjust]
screw_thread: CW-M3
speed: 200
screw1: 79, 100
screw1_name: center
screw2: 160, 25
screw2_name: right back screw
screw3: 160, 195
screw3_name: right front screw
screw4: -10, 25
screw4_name: left front screw
screw5: -10, 195
screw5_name: left back screw

#[z_tilt]
#z_positions:
 # 0,117
  #235,117
# A list of X, Y coordinates (one per line; subsequent lines
# indented) describing the location of each bed "pivot point". The
# "pivot point" is the point where the bed attaches to the given Z
# stepper. It is described using nozzle coordinates (the X, Y position
# of the nozzle if it could move directly above the point). The
# first entry corresponds to stepper_z, the second to stepper_z1,
# the third to stepper_z2, etc. This parameter must be provided.
#points:
  #-20,96.5
  #180,96.5
# A list of X, Y coordinates (one per line; subsequent lines
# indented) that should be probed during a Z_TILT_ADJUST command.
# Specify coordinates of the nozzle and be sure the probe is above
# the bed at the given nozzle coordinates. This parameter must be
# provided.
#speed: 100
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
#horizontal_move_z: 15
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
#retries: 10
# Number of times to retry if the probed points aren't within
# tolerance.
#retry_tolerance: 0.01
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.


[static_digital_output display_reset]
# the FSMC touchscreen isn't supported, so we'll just disable it
pins: !PC6, !PD13

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.186195, 0.183695, 0.161195, 0.171195, 0.233695
#*# 	0.073695, 0.048695, 0.021195, 0.043695, 0.093695
#*# 	0.016195, 0.003695, -0.041305, -0.031305, 0.011195
#*# 	0.061195, 0.026195, -0.018805, -0.028805, 0.003695
#*# 	0.173695, 0.141195, 0.086195, 0.081195, 0.243695
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 16.0
#*# max_x = 225.0
#*# min_y = 10.0
#*# max_y = 210.0
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 73.6
#*# shaper_type_y = ei
#*# shaper_freq_y = 37.6
#*#
#*# [bltouch]
#*# z_offset = 1.205
#*#
#*# [bed_mesh adaptive]
#*# version = 1
#*# points =
#*# 	0.144687, 0.159687, 0.117187, 0.107187, 0.127187
#*# 	0.054687, 0.089687, 0.154687, 0.082187, 0.064687
#*# 	-0.002813, 0.079687, 0.232187, 0.102187, -0.000313
#*# 	0.057187, 0.087187, 0.194687, 0.052187, -0.002813
#*# 	0.149687, 0.147187, 0.084687, 0.072187, 0.172187
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 16.0
#*# max_x = 225.0
#*# min_y = 10.0
#*# max_y = 210.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 43.814
#*# pid_ki = 17.181
#*# pid_kd = 27.933
